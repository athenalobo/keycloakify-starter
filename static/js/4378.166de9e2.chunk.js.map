{"version":3,"file":"static/js/4378.166de9e2.chunk.js","mappings":"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","sources":["keycloak-theme/account/Template.tsx","../node_modules/keycloakify/src/account/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/usePrepareTemplate.ts","../node_modules/keycloakify/src/tools/HTMLElement.prototype.prepend.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/keycloakify/src/tools/headInsert.ts","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { usePrepareTemplate } from \"keycloakify/lib/usePrepareTemplate\";\nimport { type TemplateProps } from \"keycloakify/account/TemplateProps\";\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\nimport type { KcContext } from \"./kcContext\";\nimport type { I18n } from \"./i18n\";\nimport { assert } from \"keycloakify/tools/assert\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, active, classes, children } = props;\n\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\n\n    const { locale, url, features, realm, message, referrer } = kcContext;\n\n    const { isReady } = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        \"styles\": [\n            `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n            `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n            `${url.resourcesPath}/css/account.css`\n        ],\n        \"htmlClassName\": undefined,\n        \"bodyClassName\": clsx(\"admin-console\", \"user\", getClassName(\"kcBodyClass\"))\n    });\n\n    if (!isReady) {\n        return null;\n    }\n\n    return (\n        <>\n            <header className=\"navbar navbar-default navbar-pf navbar-main header\">\n                <nav className=\"navbar\" role=\"navigation\">\n                    <div className=\"navbar-header\">\n                        <div className=\"container\">\n                            <h1 className=\"navbar-title\">Keycloak</h1>\n                        </div>\n                    </div>\n                    <div className=\"navbar-collapse navbar-collapse-1\">\n                        <div className=\"container\">\n                            <ul className=\"nav navbar-nav navbar-utility\">\n                                {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                                    <li>\n                                        <div className=\"kc-dropdown\" id=\"kc-locale-dropdown\">\n                                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                            <a href=\"#\" id=\"kc-current-locale-link\">\n                                                {labelBySupportedLanguageTag[currentLanguageTag]}\n                                            </a>\n                                            <ul>\n                                                {locale.supported.map(({ languageTag }) => (\n                                                    <li key={languageTag} className=\"kc-dropdown-item\">\n                                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                                        <a href=\"#\" onClick={() => changeLocale(languageTag)}>\n                                                            {labelBySupportedLanguageTag[languageTag]}\n                                                        </a>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </div>\n                                    </li>\n                                )}\n                                {referrer?.url && (\n                                    <li>\n                                        <a href={referrer.url} id=\"referrer\">\n                                            {msg(\"backTo\", referrer.name)}\n                                        </a>\n                                    </li>\n                                )}\n                                <li>\n                                    <a href={url.getLogoutUrl()}>{msg(\"doSignOut\")}</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </header>\n\n            <div className=\"container\">\n                <div className=\"bs-sidebar col-sm-3\">\n                    <ul>\n                        <li className={clsx(active === \"account\" && \"active\")}>\n                            <a href={url.accountUrl}>{msg(\"account\")}</a>\n                        </li>\n                        {features.passwordUpdateSupported && (\n                            <li className={clsx(active === \"password\" && \"active\")}>\n                                <a href={url.passwordUrl}>{msg(\"password\")}</a>\n                            </li>\n                        )}\n                        <li className={clsx(active === \"totp\" && \"active\")}>\n                            <a href={url.totpUrl}>{msg(\"authenticator\")}</a>\n                        </li>\n                        {features.identityFederation && (\n                            <li className={clsx(active === \"social\" && \"active\")}>\n                                <a href={url.socialUrl}>{msg(\"federatedIdentity\")}</a>\n                            </li>\n                        )}\n                        <li className={clsx(active === \"sessions\" && \"active\")}>\n                            <a href={url.sessionsUrl}>{msg(\"sessions\")}</a>\n                        </li>\n                        <li className={clsx(active === \"applications\" && \"active\")}>\n                            <a href={url.applicationsUrl}>{msg(\"applications\")}</a>\n                        </li>\n                        {features.log && (\n                            <li className={clsx(active === \"log\" && \"active\")}>\n                                <a href={url.logUrl}>{msg(\"log\")}</a>\n                            </li>\n                        )}\n                        {realm.userManagedAccessAllowed && features.authorization && (\n                            <li className={clsx(active === \"authorization\" && \"active\")}>\n                                <a href={url.resourceUrl}>{msg(\"myResources\")}</a>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n\n                <div className=\"col-sm-9 content-area\">\n                    {message !== undefined && (\n                        <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                            {message.type === \"success\" && <span className=\"pficon pficon-ok\"></span>}\n                            {message.type === \"error\" && <span className=\"pficon pficon-error-circle-o\"></span>}\n                            <span className=\"kc-feedback-text\">{message.summary}</span>\n                        </div>\n                    )}\n\n                    {children}\n                </div>\n            </div>\n        </>\n    );\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/account/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcButtonClass\": \"btn\",\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonDefaultClass\": \"btn-default\"\n    }\n});\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { useReducer, useEffect } from \"react\";\nimport { headInsert } from \"keycloakify/tools/headInsert\";\nimport { clsx } from \"keycloakify/tools/clsx\";\n\nexport function usePrepareTemplate(params: {\n    doFetchDefaultThemeResources: boolean;\n    styles?: string[];\n    scripts?: string[];\n    htmlClassName: string | undefined;\n    bodyClassName: string | undefined;\n}) {\n    const { doFetchDefaultThemeResources, styles = [], scripts = [], htmlClassName, bodyClassName } = params;\n\n    const [isReady, setReady] = useReducer(() => true, !doFetchDefaultThemeResources);\n\n    useEffect(() => {\n        if (!doFetchDefaultThemeResources) {\n            return;\n        }\n\n        let isUnmounted = false;\n\n        const removeArray: (() => void)[] = [];\n\n        (async () => {\n            const prLoadedArray: Promise<void>[] = [];\n\n            styles.reverse().forEach(href => {\n                const { prLoaded, remove } = headInsert({\n                    \"type\": \"css\",\n                    \"position\": \"prepend\",\n                    href\n                });\n\n                removeArray.push(remove);\n\n                prLoadedArray.push(prLoaded);\n            });\n\n            await Promise.all(prLoadedArray);\n\n            if (isUnmounted) {\n                return;\n            }\n\n            setReady();\n        })();\n\n        scripts.forEach(src => {\n            const { remove } = headInsert({\n                \"type\": \"javascript\",\n                src\n            });\n\n            removeArray.push(remove);\n        });\n\n        return () => {\n            isUnmounted = true;\n            removeArray.forEach(remove => remove());\n        };\n    }, []);\n\n    useSetClassName({\n        \"target\": \"html\",\n        \"className\": htmlClassName\n    });\n\n    useSetClassName({\n        \"target\": \"body\",\n        \"className\": bodyClassName\n    });\n\n    return { isReady };\n}\n\nfunction useSetClassName(params: { target: \"html\" | \"body\"; className: string | undefined }) {\n    const { target, className } = params;\n\n    useEffect(() => {\n        if (className === undefined) {\n            return;\n        }\n\n        const htmlClassList = document.getElementsByTagName(target)[0].classList;\n\n        const tokens = clsx(className).split(\" \");\n\n        htmlClassList.add(...tokens);\n\n        return () => {\n            htmlClassList.remove(...tokens);\n        };\n    }, [className]);\n}\n","if (!HTMLElement.prototype.prepend) {\n    HTMLElement.prototype.prepend = function (childNode) {\n        if (typeof childNode === \"string\") {\n            throw new Error(\"Error with HTMLElement.prototype.appendFirst polyfill\");\n        }\n\n        this.insertBefore(childNode, this.firstChild);\n    };\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import \"./HTMLElement.prototype.prepend\";\nimport { Deferred } from \"evt/tools/Deferred\";\n\nexport function headInsert(\n    params:\n        | {\n              type: \"css\";\n              href: string;\n              position: \"append\" | \"prepend\";\n          }\n        | {\n              type: \"javascript\";\n              src: string;\n          }\n): { remove: () => void; prLoaded: Promise<void> } {\n    const htmlElement = document.createElement(\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return \"link\";\n                case \"javascript\":\n                    return \"script\";\n            }\n        })()\n    );\n\n    const dLoaded = new Deferred<void>();\n\n    htmlElement.addEventListener(\"load\", () => dLoaded.resolve());\n\n    Object.assign(\n        htmlElement,\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return {\n                        \"href\": params.href,\n                        \"type\": \"text/css\",\n                        \"rel\": \"stylesheet\",\n                        \"media\": \"screen,print\"\n                    };\n                case \"javascript\":\n                    return {\n                        \"src\": params.src,\n                        \"type\": \"text/javascript\"\n                    };\n            }\n        })()\n    );\n\n    document.getElementsByTagName(\"head\")[0][\n        (() => {\n            switch (params.type) {\n                case \"javascript\":\n                    return \"appendChild\";\n                case \"css\":\n                    return (() => {\n                        switch (params.position) {\n                            case \"append\":\n                                return \"appendChild\";\n                            case \"prepend\":\n                                return \"prepend\";\n                        }\n                    })();\n            }\n        })()\n    ](htmlElement);\n\n    return {\n        \"prLoaded\": dLoaded.pr,\n        \"remove\": () => htmlElement.remove()\n    };\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["Template","props","kcContext","i18n","doUseDefaultCss","active","classes","children","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","locale","url","features","realm","message","referrer","usePrepareTemplate","concat","resourcesCommonPath","resourcesPath","undefined","clsx","isReady","_jsxs","_Fragment","_jsx","className","role","internationalizationEnabled","assert","supported","length","id","href","map","_ref","languageTag","onClick","name","getLogoutUrl","accountUrl","passwordUpdateSupported","passwordUrl","totpUrl","identityFederation","socialUrl","sessionsUrl","applicationsUrl","log","logUrl","userManagedAccessAllowed","authorization","resourceUrl","type","summary","createUseClassName","params","defaultClasses","useConstCallback","classKey","doFetchDefaultThemeResources","_params$styles","styles","_params$scripts","scripts","htmlClassName","bodyClassName","_useReducer","useReducer","_useReducer2","_slicedToArray","setReady","useEffect","isUnmounted","removeArray","_asyncToGenerator","_regeneratorRuntime","mark","_callee","prLoadedArray","wrap","_context","prev","next","reverse","forEach","_headInsert","headInsert","prLoaded","remove","push","Promise","all","abrupt","stop","src","useSetClassName","target","htmlClassList","document","getElementsByTagName","classList","tokens","split","add","apply","_toConsumableArray","HTMLElement","prototype","prepend","childNode","Error","this","insertBefore","firstChild","len","arguments","i","cls","arg","toAdd","Array","isArray","k","typeGuard","htmlElement","createElement","dLoaded","Deferred","addEventListener","resolve","Object","assign","position","pr","_value","isMatched"],"sourceRoot":""}